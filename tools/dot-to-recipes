#!/usr/bin/env python

import re
import os
import sys
import collections

regex = re.compile(r'"(?P<name>[^"]+)" \[label="(?P<label>[^"]+)"\]')

try:
    dotfile = sys.argv[1]
    requested = sys.argv[2:]
except IndexError:
    sys.exit("Usage: dot-to-recipes.py DOTFILE TARGET [TARGET...]")

depends = collections.defaultdict(set)
dotfile = open(dotfile, "rU")
for line in dotfile:
    match = re.match(regex, line)
    if not match:
        if " -> " in line:
            src, dest = line.rstrip().replace('"', '').split(" -> ")
            srcrecipe, srctask = src.rsplit(".", 1)
            destrecipe, desttask = dest.rsplit(".", 1)
            if desttask in ("do_populate_sysroot", "do_package_stage",
                            "do_deploy"):
                depends[srcrecipe].add(destrecipe)

seen = set()
def get_depends(targets):
    for target in targets:
        for depend in depends[target]:
            if depend in seen:
                continue
            seen.add(depend)
            for ndepend in get_depends(depend):
                yield ndepend
            yield depend

skip_patterns = ["^task-", "^meta-", "-image$", "-image-"]
for i, pattern in enumerate(list(skip_patterns)):
    skip_patterns[i] = re.compile(pattern)

for depend in get_depends(requested):
    if any(re.search(pattern, depend) for pattern in skip_patterns):
        continue
    print(depend)
